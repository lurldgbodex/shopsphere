services:
  postgres:
    image: 'postgres'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - '5435:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - shopsphere-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - shopsphere-net
    healthcheck:
      test: ["CMD", "mongo", "-u", "${MONGO_USER}", "-p", "${MONGO_PASSWORD}", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - shopsphere-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/products_db
    depends_on:
      - mongodb
    networks:
      - shopsphere-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - shopsphere-net

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - discovery-server
      - auth-service
      - product-service

networks:
  shopsphere-net:
    driver: bridge

volumes:
  postgres:
  mongodb: