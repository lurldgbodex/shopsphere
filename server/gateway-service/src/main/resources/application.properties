server.port=8080
spring.application.name=api-gateway

spring.main.banner-mode=off

# logging config
logging.level.org.springframework.security=WARN
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.file.name=logs/gateway.log
logging.pattern.file="%d{yyyy-MM-dd HH:mm:ss} - $msg$n"

# eureka configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.instance.prefer-ip-address=true

# discovery server
spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args.pattern=/eureka/web
spring.cloud.gateway.routes[0].filters[0].name=SetPath
spring.cloud.gateway.routes[0].filters[0].args.template=/

spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args.pattern=/eureka/**

# auth-service
spring.cloud.gateway.routes[2].id=auth-service
spring.cloud.gateway.routes[2].uri=lb://AUTH-SERVICE
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args.pattern=/api/v1/auth/**

# product-service (user)
spring.cloud.gateway.routes[3].id=product-service
spring.cloud.gateway.routes[3].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[3].predicates[0].name=Path
spring.cloud.gateway.routes[3].predicates[0].args.pattern=/api/v1/products/**

# product-service (vendor)
spring.cloud.gateway.routes[4].id=vendor-product-service
spring.cloud.gateway.routes[4].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[4].predicates[0].name=Path
spring.cloud.gateway.routes[4].predicates[0].args.pattern=/api/v1/vendor/products/**

# order service
spring.cloud.gateway.routes[5].id=order-service
spring.cloud.gateway.routes[5].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[5].predicates[0].name=Path
spring.cloud.gateway.routes[5].predicates[0].args.pattern=/api/v1/orders/**

# payment-service
spring.cloud.gateway.routes[6].id=payment-service
spring.cloud.gateway.routes[6].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[6].predicates[0].name=Path
spring.cloud.gateway.routes[6].predicates[0].args.pattern=/api/v1/payments/**

# rate limiter config
spring.cloud.gateway.routes[7].id=rate-limited-route
spring.cloud.gateway.routes[7].uri=http://localhost:8080
spring.cloud.gateway.routes[7].predicates[0].name=Path
spring.cloud.gateway.routes[7].predicates[0].args.pattern=/api/**
spring.cloud.gateway.routes[7].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[7].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.routes[7].filters[0].args.redis-rate-limiter.burstCapacity=20

# Swagger UI route
spring.cloud.gateway.routes[8].id=swagger-ui
spring.cloud.gateway.routes[8].uri=http://localhost:8080
spring.cloud.gateway.routes[8].predicates[0]=Path=/swagger-ui/**
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/swagger-ui/(?<path>.*), /$\{path}

# Redirect /docs to /swagger-ui/**
spring.cloud.gateway.routes[9].id=docs-redirect
spring.cloud.gateway.routes[9].uri=http://localhost:8080
spring.cloud.gateway.routes[9].predicates[0]=Path=/docs
spring.cloud.gateway.routes[9].filters[0]=RedirectTo=302, /swagger-ui/

spring.cloud.gateway.default-filters.name=JwtGlobalFilter
spring.security.jwt.secret=${JWT_SECRET}

# monitoring
management.endpoints.web.exposure.include=*
management.metrics.tags.application=shopsphere_api-gateway
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://localhost:9411